version: '3'

services:
  mongodb:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    restart: always

  front:
    image: legraina/ns_webapp_front
    container_name: front
    build:
      context: ./front
      dockerfile: Dockerfile-dev
    command: >
     bash -c "service nginx start && npm start"
    # build: ./front
    ports:
      - 8443:443
      - 8080:80
      - 4200
    depends_on:
      - api
    volumes:
      - dataset:/app/dataset
    restart: always

  api:
    build: ./api
    image: legraina/ns_webapp_api
    container_name: api
    ports:
      - 5000
    depends_on:
      - mongodb
    volumes:
      - dataset:/app/dataset
    restart: always

  worker1:
    build: ./cpp-invoker
    image: legraina/ns_webapp_scheduler
    container_name: worker1
    hostname: worker1
    ports:
      - 5000
    command: worker1:5000
    volumes:
      - dataset:/invoker/dataset
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'

  worker2:
    build: ./cpp-invoker
    image: legraina/ns_webapp_scheduler
    container_name: worker2
    hostname: worker2
    ports:
      - 5000
    command: worker2:5000
    volumes:
      - dataset:/invoker/dataset
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'

  worker3:
    build: ./cpp-invoker
    image: legraina/ns_webapp_scheduler
    container_name: worker3
    hostname: worker3
    ports:
      - 5000
    command: worker3:5000
    volumes:
      - dataset:/invoker/dataset
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'

  haproxy:
    image: haproxy
    container_name: haproxy
    depends_on:
      - worker1
      - worker2
      - worker3
    ports:
      - 80
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    restart: always

volumes:
  dataset:
  mongo_data:
